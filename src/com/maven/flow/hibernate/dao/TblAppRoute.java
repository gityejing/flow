package com.maven.flow.hibernate.dao;

import com.maven.flow.editor.adapter.impl.FlowEdgeInfo;
import com.maven.flow.editor.model.ApprovalProcessObject;
import com.maven.flow.editor.model.EndElement;
import com.maven.flow.editor.model.FlowEdgeObject;
import com.maven.flow.editor.model.HandleProcessObject;
import com.maven.flow.editor.model.ProcessElementObject;
import com.maven.flow.editor.model.StartElement;

/**
 * TblAppRoute generated by MyEclipse Persistence Tools
 */

public class TblAppRoute implements java.io.Serializable {

	// Fields

	private Integer routeId;

	private Integer appId;

	private String routeName;

	private String routeDesc;

	private String routeDisplayText;

	private Integer routeBeginProcess;

	private Integer routeEndProcess;

	private String routePositionInfo;

	private Integer subFlowPath;

	private TblProcess beginProcess = null;// 开始步骤

	private TblProcess endProcess = null;// 结束步骤

	long beginProcessId;
	
	long targetProcessId;
	// Constructors

	private String isConditionPath="0";//是否是有条件路径.  当条件成熟时,可以多一些目标路径.
	
	private String conditionExpress;//条件表达式
	
	private String isBack="0";//是否是回退步骤.
	
	private String isRouteAsynchronism="0";//是否是异步步骤。
	
	private byte[] bytes;//线段二进制数据保存点
	
	private String propertiesTest;
	
	private String conditionClass;
	
	private String finishCondition;//完成路径的条件
	
	
	public TblAppRoute(Integer routeId, Integer appId, String routeName, String routeDesc, String routeDisplayText, Integer routeBeginProcess, Integer routeEndProcess, String routePositionInfo, Integer subFlowPath, String isConditionPath, String isBack, String isRouteAsynchronism, String conditionClass) {
		super();
		this.routeId = routeId;
		this.appId = appId;
		this.routeName = routeName;
		this.routeDesc = routeDesc;
		this.routeDisplayText = routeDisplayText;
		this.routeBeginProcess = routeBeginProcess;
		this.routeEndProcess = routeEndProcess;
		this.routePositionInfo = routePositionInfo;
		this.subFlowPath = subFlowPath;
		this.isConditionPath = isConditionPath;
		this.isBack = isBack;
		this.isRouteAsynchronism = isRouteAsynchronism;
		this.conditionClass = conditionClass;
	}

	public String getPropertiesTest() {
		return propertiesTest;
	}

	public void setPropertiesTest(String propertiesTest) {
		this.propertiesTest = propertiesTest;
	}

	/** default constructor */
	public TblAppRoute() {
	}

	

	// Property accessors

	public String getFinishCondition() {
		return finishCondition;
	}

	public void setFinishCondition(String finishCondition) {
		this.finishCondition = finishCondition;
	}

	public long getBeginProcessId() {
		return beginProcessId;
	}

	public void setBeginProcessId(long beginProcessId) {
		this.beginProcessId = beginProcessId;
	}

	public long getTargetProcessId() {
		return targetProcessId;
	}

	public void setTargetProcessId(long targetProcessId) {
		this.targetProcessId = targetProcessId;
	}

	public Integer getRouteId() {
		return this.routeId;
	}

	public void setRouteId(Integer routeId) {
		this.routeId = routeId;
	}

	public Integer getAppId() {
		return this.appId;
	}

	public void setAppId(Integer appId) {
		this.appId = appId;
	}

	public String getRouteName() {
		return this.routeName;
	}

	public void setRouteName(String routeName) {
		this.routeName = routeName;
	}

	public String getRouteDesc() {
		return this.routeDesc;
	}

	public void setRouteDesc(String routeDesc) {
		this.routeDesc = routeDesc;
	}

	public String getRouteDisplayText() {
		return this.routeDisplayText;
	}

	public void setRouteDisplayText(String routeDisplayText) {
		this.routeDisplayText = routeDisplayText;
	}

	public Integer getRouteBeginProcess() {
		return this.routeBeginProcess;
	}

	public void setRouteBeginProcess(Integer routeBeginProcess) {
		this.routeBeginProcess = routeBeginProcess;
	}

	public Integer getRouteEndProcess() {
		return this.routeEndProcess;
	}

	public void setRouteEndProcess(Integer routeEndProcess) {
		this.routeEndProcess = routeEndProcess;
	}

	public String getRoutePositionInfo() {
		return this.routePositionInfo;
	}

	public void setRoutePositionInfo(String routePositionInfo) {
		this.routePositionInfo = routePositionInfo;
	}

	public Integer getSubFlowPath() {
		return this.subFlowPath;
	}

	public void setSubFlowPath(Integer subFlowPath) {
		this.subFlowPath = subFlowPath;
	}

	public TblProcess getBeginProcess() {
		return beginProcess;
	}

	public void setBeginProcess(TblProcess beginProcess) {
		this.beginProcess = beginProcess;
	}

	public TblProcess getEndProcess() {
		return endProcess;
	}

	public void setEndProcess(TblProcess endProcess) {
		this.endProcess = endProcess;
	}

	public String getConditionExpress() {
		return conditionExpress;
	}

	public void setConditionExpress(String conditionExpress) {
		this.conditionExpress = conditionExpress;
	}

	public String getIsBack() {
		return isBack;
	}

	public void setIsBack(String isBack) {
		this.isBack = isBack;
	}

	public String getIsConditionPath() {
		return isConditionPath;
	}

	public void setIsConditionPath(String isConditionPath) {
		this.isConditionPath = isConditionPath;
	}

	public String getIsRouteAsynchronism() {
		return isRouteAsynchronism;
	}

	public void setIsRouteAsynchronism(String isRouteAsynchronism) {
		this.isRouteAsynchronism = isRouteAsynchronism;
	}
	
	
	public byte[] getBytes() {
		return bytes;
	}

	public void setBytes(byte[] bytes) {
		this.bytes = bytes;
	}

	public String getConditionClass() {
		return conditionClass;
	}

	public void setConditionClass(String conditionClass) {
		this.conditionClass = conditionClass;
	}

	public void assign(FlowEdgeInfo edgeinfo) {
		
		ProcessElementObject a = ((ProcessElementObject) edgeinfo.getSource().getFlowObject());
		ProcessElementObject info = (ProcessElementObject) a;
		
		long beginProcessId=edgeinfo.getSource().getFlowObject().getId();
		long targetProcessId=edgeinfo.getTarget().getFlowObject().getId();
		
		
		
		//TblAppRoute ar=new TblAppRoute();
		setBeginProcessId(beginProcessId);
		setTargetProcessId(targetProcessId);
		
		
		this.setRouteBeginProcess(new Integer(beginProcessId+""));
		this.setRouteEndProcess(new Integer(targetProcessId+""));
		
		
		FlowEdgeObject flowEdgeObj=edgeinfo.getEdgeObject();
		if(flowEdgeObj==null || flowEdgeObj.getName()==null){
			setRouteName(" ");
		}else{
			setRouteName(flowEdgeObj.getName());
		}
		edgeinfo.setSource(null);
		edgeinfo.setTarget(null);
		this.setBytes(edgeinfo.getBytes());
		
		this.setConditionExpress(flowEdgeObj.getConditionExpress());
		this.setConditionClass(flowEdgeObj.getConditionClass());
		this.setFinishCondition(flowEdgeObj.getFinishCondition());
		this.setIsBack(flowEdgeObj.getIsBack());
		this.setIsConditionPath(flowEdgeObj.getIsConditionPath());
		this.setIsRouteAsynchronism(flowEdgeObj.getIsRouteAsynchronism());
		
		
		//System.out.println("beginProcessId=="+beginProcessId+",targetProcessId="+targetProcessId);
	}
}