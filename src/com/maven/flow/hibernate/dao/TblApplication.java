package com.maven.flow.hibernate.dao;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import com.maven.flow.editor.SystemGloable;
import com.maven.flow.editor.adapter.impl.FlowGraphInfo;
import com.maven.flow.service.IDService;
import com.maven.flow.util.ByteUtil;
import com.maven.flow.util.StringUtil;

/**
 * TblApplication generated by MyEclipse Persistence Tools
 */

public class TblApplication implements java.io.Serializable {

	/**
	 * 监控授权规则：参与者+自定义
	 */
	public static final int MONITOR_RULE_BOTH = 0;

	/**
	 * 监控授权规则：只允许参与者
	 */
	public static final int MONITOR_RULE_PARTICIPANT = 1;

	/**
	 * 监控授权规则：只允许自定义
	 */
	public static final int MONITOR_RULE_CUSTOMIZE = 2;

	/**
	 * 有效状态：有效
	 */
	public static final int VALID_YES = 1;

	/**
	 * 有效状态：无效
	 */
	public static final int VALID_NO = 0;

	/**
	 * 发布状态：已发布
	 */
	public static final int RELEASE_YES = 1;

	/**
	 * 发布状态：未发布
	 */
	public static final int RELEASE_NO = 0;

	// Fields

	private Integer appId;

	private String appName;

	private String appDesc;

	private Date appCreateTime;

	private Integer appCreateUser;

	private String appCreateUserName;

	private Date appReleaseTime;

	private String appReleaseUserName;

	private Integer appReleaseUser;

	private Integer appMonitorRule;

	private Integer appValidStatus;

	private Integer appReleaseStatus;

	private String appFlowData;

	private String subFlowFlag;

	private List appRoutes = new ArrayList();// 流程所有路径信息

	private List processes = new ArrayList();// 流程所有步骤信息

	private List monitorAccesses = new ArrayList();// 流程所有全控权限信息

	// Constructors
	private String applicationCode;//
	
	

	public String getApplicationCode() {
		return applicationCode;
	}

	public void setApplicationCode(String applicationCode) {
		this.applicationCode = applicationCode;
	}

	/** default constructor */
	public TblApplication() {
	}

	/** minimal constructor */
	public TblApplication(Integer appId, String appName,
			Integer appMonitorRule, Integer appValidStatus,
			Integer appReleaseStatus) {
		this.appId = appId;
		this.appName = appName;
		this.appMonitorRule = appMonitorRule;
		this.appValidStatus = appValidStatus;
		this.appReleaseStatus = appReleaseStatus;
	}

	/** full constructor */
	public TblApplication(Integer appId, String appName, String appDesc,
			Date appCreateTime, Integer appCreateUser,
			String appCreateUserName, Date appReleaseTime,
			String appReleaseUserName, Integer appReleaseUser,
			Integer appMonitorRule, Integer appValidStatus,
			Integer appReleaseStatus, String appFlowData, String subFlowFlag) {
		this.appId = appId;
		this.appName = appName;
		this.appDesc = appDesc;
		this.appCreateTime = appCreateTime;
		this.appCreateUser = appCreateUser;
		this.appCreateUserName = appCreateUserName;
		this.appReleaseTime = appReleaseTime;
		this.appReleaseUserName = appReleaseUserName;
		this.appReleaseUser = appReleaseUser;
		this.appMonitorRule = appMonitorRule;
		this.appValidStatus = appValidStatus;
		this.appReleaseStatus = appReleaseStatus;
		this.appFlowData = appFlowData;
		this.subFlowFlag = subFlowFlag;
	}

	// Property accessors

	public Integer getAppId() {
		return this.appId;
	}

	public void setAppId(Integer appId) {
		this.appId = appId;
	}

	public String getAppName() {
		return this.appName;
	}

	public void setAppName(String appName) {
		this.appName = appName;
	}

	public String getAppDesc() {
		return this.appDesc;
	}

	public void setAppDesc(String appDesc) {
		this.appDesc = appDesc;
	}

	public Date getAppCreateTime() {
		return this.appCreateTime;
	}

	public void setAppCreateTime(Date appCreateTime) {
		this.appCreateTime = appCreateTime;
	}

	public Integer getAppCreateUser() {
		return this.appCreateUser;
	}

	public void setAppCreateUser(Integer appCreateUser) {
		this.appCreateUser = appCreateUser;
	}

	public String getAppCreateUserName() {
		return this.appCreateUserName;
	}

	public void setAppCreateUserName(String appCreateUserName) {
		this.appCreateUserName = appCreateUserName;
	}

	public Date getAppReleaseTime() {
		return this.appReleaseTime;
	}

	public void setAppReleaseTime(Date appReleaseTime) {
		this.appReleaseTime = appReleaseTime;
	}

	public String getAppReleaseUserName() {
		return this.appReleaseUserName;
	}

	public void setAppReleaseUserName(String appReleaseUserName) {
		this.appReleaseUserName = appReleaseUserName;
	}

	public Integer getAppReleaseUser() {
		return this.appReleaseUser;
	}

	public void setAppReleaseUser(Integer appReleaseUser) {
		this.appReleaseUser = appReleaseUser;
	}

	public Integer getAppMonitorRule() {
		return this.appMonitorRule;
	}

	public void setAppMonitorRule(Integer appMonitorRule) {
		this.appMonitorRule = appMonitorRule;
	}

	public Integer getAppValidStatus() {
		return this.appValidStatus;
	}

	public void setAppValidStatus(Integer appValidStatus) {
		this.appValidStatus = appValidStatus;
	}

	public Integer getAppReleaseStatus() {
		return this.appReleaseStatus;
	}

	public void setAppReleaseStatus(Integer appReleaseStatus) {
		this.appReleaseStatus = appReleaseStatus;
	}

	public String getAppFlowData() {
		return this.appFlowData;
	}

	public void setAppFlowData(String appFlowData) {
		this.appFlowData = appFlowData;
	}

	public String getSubFlowFlag() {
		return this.subFlowFlag;
	}

	public void setSubFlowFlag(String subFlowFlag) {
		this.subFlowFlag = subFlowFlag;
	}

	public List getAppRoutes() {
		return appRoutes;
	}

	public void setAppRoutes(List appRoutes) {
		this.appRoutes = appRoutes;
	}

	public List getMonitorAccesses() {
		return monitorAccesses;
	}

	public void setMonitorAccesses(List monitorAccesses) {
		this.monitorAccesses = monitorAccesses;
	}

	public List getProcesses() {
		return processes;
	}

	public void setProcesses(List processes) {
		this.processes = processes;
	}
	/**
	 * 有流程本身属性
	 * 有cell edgle port
	 * @param graphInfo
	 * @return
	 */
	public static TblApplication GraphInfoToApplication(FlowGraphInfo graphInfo)
	{
		IDService idservice=new IDService();
		TblApplicationDAO appDao=new TblApplicationDAO();
		Integer appId =new Integer(""+ graphInfo.getGraphElement().getAppId());
		TblApplication app = appDao.findById(appId);
		if (app != null) {
			app.setAppName(graphInfo.getGraphElement().getName());
			app.setAppDesc(graphInfo.getGraphElement().getDescription());
			app.setApplicationCode(graphInfo.getGraphElement().getApplicationCode());
			try {
				if (!StringUtil.isNull(graphInfo.getGraphElement().getCreator())) {
					app.setAppCreateUser(new Integer(graphInfo.getGraphElement().getCreator()));
				}
				if (!StringUtil.isNull(graphInfo.getGraphElement().getPublisher())) {
					app.setAppReleaseUser(new Integer(graphInfo.getGraphElement().getPublisher()));
				}
			} catch (Exception ex) {
			}
			app.setAppReleaseTime(graphInfo.getGraphElement().getPublishTime());
			//String appdata=ByteUtil.objectBase64Encode(graphInfo);
			//app.setAppFlowData(appdata);
			//保存了流程主信息
			appDao.attachDirty(app);
			//
		} else {
			app = new TblApplication();
			app.setAppValidStatus(new Integer(TblApplication.VALID_NO));
			app.setAppReleaseStatus(new Integer(TblApplication.RELEASE_NO));
			app.setAppName(graphInfo.getGraphElement().getName());
			app.setAppDesc(graphInfo.getGraphElement().getDescription());
			app.setApplicationCode(graphInfo.getGraphElement().getApplicationCode());
			if (!StringUtil.isNull(graphInfo.getGraphElement().getCreator())) {
				app.setAppCreateUser(new Integer(SystemGloable.CurUserInfo.getFemployeeSn()+""));
				app.setAppCreateUserName(SystemGloable.CurUserInfo.getFemployeeSn()+"");
				
			}
			if (!StringUtil.isNull(graphInfo.getGraphElement().getPublisher())) {
				//app.setAppReleaseUser(Integer.parseInt(graphInfo.getGraphElement().getPublisher()));
				app.setAppReleaseUserName(SystemGloable.CurUserInfo.getFemployeeSn()+"");
				app.setAppReleaseUser(new Integer(SystemGloable.CurUserInfo.getFemployeeSn()+""));
			}
			app.setAppCreateTime(new Date());

			app.setAppFlowData(null);
            //这里要取一个ID
			appId=new Integer(idservice.getApplicationID());
			app.setAppId(appId);
			app.setAppFlowData(ByteUtil.objectBase64Encode(graphInfo));
			appDao.save(app);
			graphInfo.getGraphElement().setAppId(new Long(app.getAppId()+"").longValue());
		}
		return app;
	}
	
}